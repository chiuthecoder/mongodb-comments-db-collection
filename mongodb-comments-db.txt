brew install Mongodb
sudo mongod  //to run db server

control + c //to shut down db server

//open a new window
mongo
db
show dbs

//to shut down server
ps -ax | grep mongo
sudo kill *that_number*


//
show dbs
db
use test_trip
show collections
db.createCollection('trip')
db.trip.insert({name: 'Paris'}

db.calendar.insert({year: 2016})
db.calendar.find({year: 2016})
db.calendar.find().pretty()
db.calendar.remove({year: 2016})
db.calendar.update({location: "Seattle"}, {year: 2015})
db.calendar.update({location: "Seattle"}, {location: "New York"})

db.calendar.update({year: 2016}, {$set: {location: "Mountain View"}})

db.COLLECTION_NAME.update({QUERY}, {FIELDS_TO_UPDATE}, {OPTIONS})  // the options document is optional
db.calendar.insert({year: 2018}, {location: "Chicago"})



db.students.insert({name: "Fox", home_state: "WA", lucky_number: 12, birthday: {month: 1, day: 1, year: 2011}})
db.students.insert({name: "Tiger", home_state: "NY", lucky_number: 13, birthday: {month: 1, day: 1, year: 2012}})
db.students.insert({name: "Cat", home_state: "CA", lucky_number: 23, birthday: {month: 1, day: 1, year: 2013}})
db.students.insert({name: "Lion", home_state: "CA", lucky_number: 1, birthday: {month: 1, day: 1, year: 2013}})
db.students.insert({name: "Snake", home_state: "CA", lucky_number: 8, birthday: {month: 1, day: 1, year: 2013}})
db.students.insert({name: "Dragon", home_state: "Tx", lucky_number: 9, birthday: {month: 1, day: 1, year: 2013}})
db.students.insert({name: "Octopus", home_state: "TX", lucky_number: 4, birthday: {month: 1, day: 1, year: 2013}})

db.students.find({home_state: "Seattle"}).pretty()
db.students.find({home_state: "CA"}).pretty()
db.students.find({home_state: "Seattle"} || {home_state: "CA"}).pretty()
db.students.remove({home_state: "CA"})

db.students.update({ $unset: {lucky_number: 9}})
db.students.update(
   { $unset: { "lucky_number" : 9} }
)
db.students.update({}, {$unset: { "lucky_number" : 1}}, {multi: true})


db.dojos.find({number_of_students: {$gt: 15}})

db.students.find({lucky_number: {$gt: 100}})

db.students.find({lucky_number: {$lte: 123}})
db.students.find(
created_at:{
	$gt: 1,
	$lte: 9
}
)

db.students.find({lucky_number: {$gt: 1, $lte: 9}})

//{ multi: true }
['coding', 'brunch', 'MongoDB']
db.students.update({_id: ObjectId("5463d871a6a96d5ed6252f4d")}, {$push: {interests: 'snowboarding'}})
db.students.update({_id: ObjectId("5463d871a6a96d5ed6252f4d")}, {$push: {interests: 'snowboarding'}})
db.students.update({_id: ObjectId("555cd4810a6d656624578d04")}, {$push: {interests: ['coding', 'brunch', 'MongoDB']}})
db.students.update({{$push: {interests: ['coding', 'brunch', 'MongoDB']}}, { multi: true })
db.students.update({$push: {interests: ['coding', 'brunch', 'MongoDB']}})
db.students.update({$pushAll: {interests: ['coding', 'brunch', 'MongoDB']}})
db.students.update({}, {$unset: { "lucky_number" : 1}}, {multi: true})
db.students.update({}, {$currentDate: { "updated_on" : { $type: "date" }}}, {multi: true} )
//
db.students.update({_id: ObjectId("555cd8b90a6d656624578d0b")}, {$push: {interests: 'snowboarding'}})
db.students.update({_id: ObjectId("555cd8b90a6d656624578d0b")}, {$pop: {interests: 'snowboarding'}})
db.students.update({_id: ObjectId("555cd8b80a6d656624578d0a")}, {$set: {interests: 'Yoga'}})
db.students.update({_id: ObjectId("555cd8b80a6d656624578d09")}, {interests: ['MongoDB']}, {$set: {interests: 'Yoga'}})


db.students.update({}, {$rename: {"saving": "checking"}})
db.students.update($unset: {"checking": 100})
//
db.students.update({}, {$push: {number_of_belts: 0}})
db.students.update({}, {$set: {name: 'Chiu'}})
///
db.students.find({home_state: "Seattle"}).pretty()
use test_app
db.dropDatabase()

// To do: 
// Create a database called 'my_first_db'.
// Create a students collection.
// Each document you insert into this collection should have the following format: {name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}}
// Create 5 students with the appropriate info.
// Get all students.
// Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
// Get all students whose lucky number is:
// greater than 3
// less than or equal to 10
// between 1 and 9 (inclusive)
// Add a field in each student collection called 'interests' that is an ARRAY.  It should contain the following entries: 'coding', 'brunch', 'MongoDB'.  Do this in ONE operation.
// Add some unique interests for each particular students into each of their interest arrays.
// Add the interest 'taxes' into someone's interest array.
// Remove the 'taxes' interest you just added.
// Remove all students who are from California (or Washington).
// Remove a user by name. 
// Remove a student whose lucky number is greater than 5 (JUST ONE)
// Add a field in each student collection called 'number_of_belts' and set it to 0.
// Increment this field by 1 for all students in Seattle.
// Rename the 'number_of_belts' field to 'belts_earned'
// Remove the 'lucky_number' field.
// Add a 'updated_on' field, and set the value as the current date.
